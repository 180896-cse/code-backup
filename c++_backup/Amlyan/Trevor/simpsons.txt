#include<iostream>
typedef float (* fFunction) (float x);

using namespace std;

float f1 (float x){
    return 4 / (1 + x*x);
}

class simp{
    float l, u, h;
    int n;
    public:
    void inp();
    float slv(fFunction);
};

void simp::inp(){
    cout<<"Lower bound: ";
    cin>>l;
    cout<<"Upper bound: ";
    cin>>u;
    do{
        cout<<"No. of intervals (multiple of 3): ";
        cin>>n;
    } while (n % 3 != 0);
    h = (u - l) / n;
}

float simp::slv (fFunction f){
    float ans = l + u;
    for (int i=1; i<n; i++)
        if(i%2)
            ans += 4 * f(l + i * h);
        else
            ans += 2 * f(l + i * h);
    ans *= h / 3;
    return ans;
}

int main(){
    simp in;
    in.inp();
    cout<<"integration= "<<in.slv(f1);
    return 0;
}



