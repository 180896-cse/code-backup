$PKGLINE
import javax.swing.JApplet;
import javax.swing.JRootPane;
import java.awt.Graphics;

/**
 * Tragen Sie hier eine Beschreibung der Applet-Klasse $CLASSNAME ein.
 *
 * @author (Ihr Name) 
 * @version (eine Versionsnummer oder ein Datum)
 */
public class $CLASSNAME extends JApplet
{
	// Instanzvariable - ersetzen Sie das folgende Beispiel mit Ihren Variablen
	private int x;

	/**
	 * Wird vom Browser oder Applet-Viewer aufgerufen, um dieses Applet darüber 
	 * zu informieren, dass es in das System geladen wurde. Wird stets vor dem
	 * ersten Aufruf der start-Methode aufgerufen.
	 */
	public void init()
	{
		// Workaround für einen Sicherheitskonflikt mit aktuellen Browsern wie
		// Netscape & Internet Explorer, die keinen Zugriff auf die AWT-Systemevent-Queue
		// erlauben, wie ihn JApplets beim Starten vornehmen
		JRootPane rootPane = this.getRootPane();	
		rootPane.putClientProperty("defeatSystemEventQueueCheck", Boolean.TRUE);
	
		// tragen Sie hier die Initialisierungen ein, die Ihr Applet benötigt

	}

	/**
	 * Wird vom Browser oder Applet-Viewer aufgerufen, um dieses Applet darüber 
	 * zu informieren, dass es seine Ausführung beginnen soll. Wird nach der
	 * init-Methode aufgerufen, und jedes Mal, wenn das Applet auf einer Webseite
	 * wieder besucht wird.
	 */
	public void start()
	{
		// tragen Sie hier den Code ein, der jedes Mal ablaufen soll, wenn die Webseite
		// (wieder) besucht wird

	}

	/** 
	 * Wird vom Browser oder Applet-Viewer aufgerufen, um dieses Applet darüber 
	 * zu informieren, dass es seine Ausführung beenden soll. Wird aufgerufen,
	 * wenn die Webseite, die dieses Applet enthält, durch eine andere ersetzt
	 * wurde, und auch unmittelbar bevor das Applet zerstört wird. Wenn es keine
	 * Ressourcen gibt, die Sie freigeben müssen (wie etwa Threads, die Sie 
	 * anhalten wollen), können Sie diese Methode entfernen.
	 */
	public void stop()
	{
		// tragen Sie hier den Code ein, der jedes Mal ablaufen soll, wenn die Webseite
		// durch eine andere ersetzt wird oder bevor das Applet zerstört wird
	
	}

	/**
	 * Wird vom Browser oder Applet-Viewer aufgerufen, um dieses Applet darüber 
	 * zu informieren, dass es zurückgefordert wird und dass es jegliche 
	 * Ressourcen zerstören soll, die es angelegt hat. Die stop-Methode wird
	 * stets vor der destroy-Methode aufgerufen.
	 */
	public void destroy()
	{
		// tragen Sie hier den Code ein, der ablaufen soll, wenn das Applet zerstört wird
	
	}


	/**
	 * Liefert Informationen über dieses Applet.
	 * Ein Applet sollte diese Methode überschreiben, um einen String zu liefern,
	 * der Informationen über Autor, Version und Copyright des Applets enthält.
	 *
	 * @return Informationen über dieses Applet in Form eines Strings
	 */
	public String getAppletInfo()
	{
		// ersetzten Sie dies mit Ihren eigenen Informationen
		return "Titel:   \nAutor:   \nEine einfache Beispielbeschreibung des Applets. ";
	}


	/**
	 * Liefert Informationen über die Parameter, die von diesem Applet verstanden
	 * werden. Sie sollten ein Array von Strings zurückgeben mit Details, getrennt
	 * nach Parametern.
	 * Jedes Element des Arrays sollte eine Menge von drei Strings sein, die den 
	 * Namen, den Typ und eine Beschreibung des Parameters darstellen.
	 *
	 * @return  Parameterinformation zu diesem Applet in Form eines String[][] Arrays 
	 */
	public String[][] getParameterInfo()
	{
		// Parameterinformationen zu diesem Applet liefern
		String paramInfo[][] = {
			 {"ersterParameter", "1-10", "Beschreibung des ersten Parameters"},
			 {"zweiterParameter", "boolean", "Beschreibung des zweiten Parameters"}
		};
		return paramInfo;
	}

	/**
	 * Dies ist wahrscheinlich die wichtigste Methode in Ihrem Applet: hier wird
	 * das Applet gezeichnet. Die paint-Methode wird jedes Mal aufgerufen, wenn 
	 * das Applet auf dem Bildschirm gezeichnet werden soll. Tragen Sie daher 
	 * hier den Code ein, der das Applet darstellt.
	 *
	 * @param  g   das Graphics-Objekt für dieses Applet
	 */
	public void paint(Graphics g)
	{
		// einfacher Text wird im Applet angezeigt 
		g.drawString("Beispiel-JApplet", 20, 20);
	}


	/**
	 * Ein Beispiel einer Methode - ersetzen Sie diesen Kommentar mit Ihrem eigenen
	 * 
	 * @param  y	ein Beispielparameter für eine Methode
	 * @return		die Summe aus x und y
	 */
	public int beispMethode(int y)
	{
		// tragen Sie hier den Code ein
		return x + y;
	}
}
