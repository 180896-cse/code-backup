####################################################################
##               BlueJ properties default values
#####################################################################
##
## All settings in this file may be changed to configure BlueJ.
## Settings in this file are system wide and apply to all users.
##
## BlueJ property settings may also be specified on a per-user basis
## in the user property file. The user property file is in
##
##    <USER_HOME>/.bluej/bluej.properties                     (Unix)
##    C:\Winnt\profiles\<USER_NAME>\bluej\bluej.properties    (WinNT)
##    C:\<JDK_HOME>\bluej\bluej.properties                    (Win9x)
##
## Each of the properties in this file may be copied to the user
## properties file. Settings in the user file override the system
## wide settings here.
##
#####################################################################


#####################################################################
## The interface language. A directory must exist for the language in
## <BLUEJ_HOME>/lib. Language directories can be created by copying
## an existing language directory and translating the contents of the
## text files in that directory. If you make a language version for
## a new language, please send it to bluej@bluej.org
#####################################################################

bluej.language=english
#bluej.language=afrikaans
#bluej.language=chinese
#bluej.language=czech
#bluej.language=german
#bluej.language=italian
#bluej.language=japanese
#bluej.language=spanish
#bluej.language=swedish

#####################################################################
## URLs for the BlueJ manuals and documentation. If you have the
## documents installed locally and want to use your local version,
## edit these URLs.
#####################################################################

bluej.url.bluej=http://www.bluej.org
bluej.url.tutorial=http://www.bluej.org/tutorial/tutorial.pdf
bluej.url.reference=http://www.bluej.org/reference/manual.pdf
bluej.url.javaStdLib=http://java.sun.com/j2se/1.4/docs/api/index.html

# do not change the following:
bluej.url.versionCheck=http://www.bluej.org/version.info


#####################################################################
## Additional help menu items. Users can add their own menu items to
## the help menu here. Each menu item, when selected, will open a URL
## in a web browser. The items are listed in the help.menu.items
## property in the form
##    bluej.help.items=<tag1> <tag2> ...
## Tags can be any identifier. For every tag, there should be two
## additional properties:
##    bluej.help.<tag>.label=<menu label>
##    bluej.help.<tag>.url=<URL to open>
## The label will appear in the menu, the URL will be opened in the
## browser. See (commented out) example below.
#####################################################################

#bluej.help.items=myCustomLib courseInfo
#bluej.help.myCustomLib.label=My CS1 libraries
#bluej.help.myCustomLib.url=http://www.google.com/
#bluej.help.courseInfo.label=CS1 course info
#bluej.help.courseInfo.url=http://www.bluej.org/help/archive.html


#####################################################################
## User's home directory. This is also defined by Java, and if that's
## fine for you, don't specify this property. This property, if
## specified, will override Java's user.home property.
#####################################################################

#bluej.userHome=/home/mik/tmp


#####################################################################
## Web browser. The following are the commands used for opening a
## web browser. (Only relevant for systems other than Windows and
## MacOS. On Win and MacOS, the mechanism is built-in.)
#####################################################################

# First, try to open the URL in a running netscape process. If that 
# fails, start netscape.  The first dollar sign ($) will be 
# replaced by the URL to be opened.
browserCmd1=netscape -remote openURL($)
browserCmd2=netscape $


#######################################################################
## Documentation generation. This specifies the command used for
## generating documentation and the directory name within the project
## directory where the documentation is stored.
## Most of the options are sensible as they are.
##
## If the doctool.command line is commented out (default), the javadoc
## command is located in the JDK directory that was used to launch BlueJ
##
## If you want private methods included in the documentation,
## change "-package" in the options to "-private".
## If "linkToStandardLib" is true, we will try to use the URL specified
## above as "bluej.url.javaStdLib" to create links. If that URL is
## not accessible, documentation generation will fail. Therefore, if
## you want to work offline, set "linkToStandardLib" to false (you
## can also do that from within BlueJ in the Preferences dialog).
#######################################################################

#doctool.command=javadoc
doctool.options=-author -version -nodeprecated -package
doctool.outputdir=doc
doctool.linkToStandardLib=true


#######################################################################
## Applets. Preferences for how applets are generated and executed.
##
## If the appletViewer.command line is commented out (default), the viewer 
## command is located in the JDK directory that was used to launch BlueJ
#######################################################################

#appletViewer.command=appletviewer


#######################################################################
## For Mac OS only: indicate whether to place the menu bar at top of 
## screen (screenmenubar=true), or top of each window 
## (screenmenubar=false). Currently, there is a bug in MacOS Java that
## causes BlueJ to crash frequently on some systems when using the
## top-of-screen menubar. Therefore, this is by default set to false.
#######################################################################

bluej.macos.screenmenubar=false


#####################################################################
## System libraries which are added to BlueJ's class path
##
## The commented out examples below are just to show the
## syntax used
#####################################################################

#bluej.systemlibrary1.description=A Sample Library for Windows
#bluej.systemlibrary1.location=S\:\\Programming\\Java\\lib\\sample.jar

#bluej.systemlibrary2.description=A Sample Library for UNIX
#bluej.systemlibrary2.location=/usr/local/java/lib/sample.jar


#######################################################################
## Class templates for new class generation. When creating a new class
## a list of templates is presented to choose from. This property
## defines this list. To add additional templates, you should
##  - choose a name <template-name> for the template
##  - create a file named <template-name>.tmpl in
##    <bluej>/lib/<language>/templates/newclass/ that contains the text
##  - add <template-name> to the classTemplates list below (optional)
##  - add a property named "pkgmgr.newClass.<template-name>" in the
##    language label files for all languages you intend to use
##    (<bluej>/lib/<language>/labels), defining the label to appear in
##    the dialogue. (optional)
## If the template is for an applet, interface or abstract class, the
## name you choose should start with "applet", "interface" or
## "abstract", respectively. Everything else will be treated as a
## standard class.
## More information is in
##      <bluej-home>/lib/<language>/templates/newclass/README
## The bluej.templatePath property can be used to choose a different
## directory to store the templates (the default is
## <bluej_home>/lib/<language>/templates/newclass).
## Note: if the path contains backslashes, they must be written as
## double-backslashes (see example).
#######################################################################

bluej.classTemplates = stdclass abstract interface applet
#bluej.templatePath = /home/mik/bluej/lib/english/templates/newclass
#bluej.templatePath = F:\\shared\\bluej\\templates


#######################################################################
## Fonts. You can choose a font size for most of the interface
## components, and a font face and size for the editor. The editor font
## size can be redefined by a user in their preference dialogue.
#######################################################################

#######################################################################
# Theme fonts for User Interface components
# These specify font and font sizes for most of the interface components.
# This is the name of a font face with an optional "-bold" at the end.
# The theme fonts are only used if bluej.useTheme flag is true.
# Note: the use of theme flag and specification and non-standard fonts
# may affect bluej startup time (not confirmed for all systems)

# Use theme, which means interface and menu fonts can be specified.
bluej.useTheme=false

bluej.fontsize=12
bluej.font=SansSerif
#bluej.font=Monospaced
#bluej.font=SIMSUN

# fonts for menus
bluej.menu.font=SansSerif-bold
bluej.menu.fontsize=12
# END OF THEME FONTS
#######################################################################

# fonts for Targets (classes in display)
bluej.target.font=SansSerif-bold
bluej.target.fontsize=12

# fontsize for the editor
bluej.editor.fontsize=12

# fontsize for the terminal
bluej.terminal.font=monospaced
#bluej.terminal.font=monospaced-bold
bluej.terminal.fontsize=12

# The editor font. This is the name of a font face with an optional
# "-bold" at the end. Most used are monospaced fonts, such as Courier.
# Good large fonts for screen projections are SansSerif-bold, 14pt, or
# Courier-bold, 18pt. Some examples:

bluej.editor.font=Monospaced
# bluej.editor.font=Monospaced-bold
# bluej.editor.font=SansSerif
# bluej.editor.font=SansSerif-bold
# bluej.editor.font=Arial-bold

# fonts for printing
bluej.fontsize.printText=10
bluej.fontsize.printTitle=14
bluej.fontsize.printInfo=10


#######################################################################
## Terminal settings. Height and width are in number of characters.
#######################################################################
bluej.terminal.height=22
bluej.terminal.width=80


#######################################################################
## Some settings for editor preferences.
## These are the initial defaults - the settings can be changed by
## users in their preferences dialogue. (values: true / false)
#######################################################################

bluej.editor.autoIndent=true
bluej.editor.syntaxHilighting=true
bluej.editor.displayLineNumbers=false
bluej.editor.makeBackup=false
bluej.editor.matchBrackets=true

bluej.editor.tabsize=4


#######################################################################
### Colours. All are specified as RGB values.
#######################################################################

colour.background=208,212,208
colour.graph.background=255,255,255
colour.text.bg=255,255,255
colour.text.fg=0,0,0

colour.arrow.uses=0,0,0
colour.arrow.implements=0,0,0
colour.arrow.extends=0,0,0

colour.target.border=0,0,0
colour.target.bg.compiling=200,150,100
colour.target.shadow=192,192,192
colour.target.stripes=152,152,152

colour.class.bg.default=255,221,153
colour.class.bg.abstract=255,221,153
colour.class.bg.interface=255,221,153
colour.package.bg.default=180,130,44


# object bench
colour.wrapper.bg=205,38,38
colour.wrapper.shadow=152,152,152

colour.menu.environOp=152,32,32


#####################################################################
## Compiling. Commands used to execute a compiler. The first property
## sets the type of the compiler. Currently it can be one of
## internal, javac or jikes. The second property if it exists,
## specifies the name of the executable to run as the compiler. This
## can be a fully qualified path or the name of an executable in the
## path. If it is not specified then BlueJ defaults to the standard
## name of the specified compiler type (ie javac for type javac and
## jikes for type jikes).
#####################################################################

bluej.compiler.type=internal

#bluej.compiler.type=jikes
#bluej.compiler.executable=jikes

#bluej.compiler.type=javac
#bluej.compiler.executable=javac

bluej.compiler.source14=false


#####################################################################
## Options for starting the internal virtual machine.
## This is a system specific option: It can be prefixed with an
## OS identifier. Known identifiers are "win9x", "win", "solaris",
## macos and "linux".
#####################################################################

#win9xVmOptions=-classic
win9xVmOptions=
winVmOptions=
linuxVmOptions=
solarisVmOptions=
macosVmOptions=

#default:
VmOptions=


#####################################################################
## User Interface "Look and Feel"
## To get the default system look and feel, don't set this property.
#####################################################################

# For the "Java Look and Feel":
#bluej.lookAndFeel=javax.swing.plaf.metal.MetalLookAndFeel

# For the Windows "Look and Feel":
#bluej.lookAndFeel=javax.swing.plaf.windows.WindowsLookAndFeel

# For the Macintosh "Look and Feel":
#bluej.lookAndFeel=javax.swing.plaf.mac.MacLookAndFeel

# For the Motif "Look and Feel":
#bluej.lookAndFeel=javax.swing.plaf.motif.MotifLookAndFeel


#######################################################################
## Debugging. When on, debug output goes to console; when off, it is
##  written to a log file in the user's bluej settings directory.
#######################################################################

debug=on
bluej.debugLog=debug.log


#######################################################################
## Images.
#######################################################################

image.icon=bluej-icon.gif
image.icon.terminal=bluej-icon-terminal.gif
image.icon.editor=bluej-icon-edit.gif
image.logo=bluej-logo.gif
image.empty=empty.gif

# arrow buttons
image.build.depends=arrow_black.gif
image.build.depends.uml=arrow_black_uml.gif
image.build.depends.selected=arrow_red.gif
image.build.extends=darrow_black.gif
image.build.extends.uml=darrow_black_uml.gif
image.build.extends.selected=darrow_red.gif

image.objectviewer.object=objectIcon.gif
image.objectviewer.blank=objectIcon_blank.gif

# the machine indicator
image.working=working.gif
image.working.disab=working-disab.gif
image.working.stopped=working-stopped.gif

# editor breakpoint and step mark
image.breakmark=break.gif
image.stepmark=stepmark.gif
image.breakstepmark=stepbreak.gif

image.classIcon=class16.gif
image.packageIcon=package16.gif

image.broken=broken-arrow.gif
image.help=help.gif

# debugger:
image.continue=continue.gif
image.step=step.gif
image.step_into=step_into.gif
image.stop=stop.gif
image.terminate=terminate.gif

