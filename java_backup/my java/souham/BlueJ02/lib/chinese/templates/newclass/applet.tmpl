$PKGLINE
import java.applet.Applet;
import java.awt.*;

/**
 * 类 $CLASSNAME - 在这里给出这个类的描述
 *
 * @作者（你的名字）
 * @版本（一个版本号或者一个日期）
 */
public class $CLASSNAME extends Applet
{
	// 实例变量 - 用你自己的变量替换下面的例子
	private int x;

	/**
	 * 由浏览器或者applet viewer调用，通知这个JApplet它已经被装入系统。
	 * 它总是在start方法第一次被调用之前被调用
	 */
	public void init()
	{
		// 提供任何你的Applet所必须的初始化步骤

	}

	/**
	 * 由浏览器或者applet viewer调用，通知这个JApplet它应该开始执行。
	 * 在init方法调用之后以及每次Web网页被重新访问的时候被调用
	 */
	public void start()
	{
		// 提供每次网页被访问时运行所需要的代码

	}


	/**
	 * 这可能是你的applet中最为重要的方法：在这里完成applet的绘图任务。
	 * "paint"在每次applet应该绘制到屏幕上时候被调用。所以在这里编写
	 * 显示applet的代码。
	 *
	 * @参数  g   这个applet的图形对象
	 */
	public void paint(Graphics g)
	{
		// 在applet上显示的简单文本
		g.setColor(Color.white);
		g.fillRect(0, 0, 200, 100);
		g.setColor(Color.black);
		g.drawString("Sample Applet", 20, 20);
		g.setColor(Color.blue);
		g.drawString("created by BlueJ", 20, 40);
	}


	/**
	 * 由浏览器或者applet viewer调用，通知这个JApplet它应该停止执行。
	 * 当包含这个JApplet的页面被另外一个页面替换的时候它会被调用，在
	 * JApplet被destroy的时候也会被调用。如果你没有任何需要释放的资源
	 * （比如你希望停止的线程）你可以删除这个方法。
	 */
	public void stop()
	{
		// 提供当页面被另一个页面替换或者JApplet被destroy之前需要执行的
		// 的任何方法
	}


	/**
	 * 由浏览器或者applet viewer调用，通知这个JApplet它正在被收回，它应该
	 * 释放所有它已经申请的资源。stop方法总会在destroy方法之前被调用。如果
	 * 你没有任何需要释放的资源，你可以删除这个方法。
	 */
	public void destroy()
	{
		// 提供Applet将要被destroy之前需要执行的代码
	}


	/**
	 * 返回这个applet的信息。
	 * 一个applet应该重写这个方法来返回一个包含这个applet信息的字符串
	 * 关于这个applet的作者，版本，版权。
	 *
	 * @返回 一个表示这个applet信息的字符串
	 */
	public String getAppletInfo()
	{
		// 使用你自己的信息替换以下的代码
		return "Title: BlueJ Applet Demo\n" + 
			   "Author: Bruce Quig\n" +
			   "A simple applet that draws two strings.";
	}


	/**
	 * 返回这个Applet能够理解的参数。这里你应该返回一个String数组，分别提供
	 * 对每一个参数的细节说明
	 * 每一个数组元素应该由三个String组合而成，包括名字，类型，和描述。
	 *
	 * @返回  一个String[][]，代表了这个Applet的参数的信息。
	 */
	public String[][] getParameterInfo()
	{
		// 提供这个applet的参数信息
		String paramInfo[][] = {
			 {"firstParameter", "1-10", "第一个参数的描述"},
			 {"secondParameter", "boolean", "第二个参数的描述"}
		};
		return paramInfo;
	}
}
