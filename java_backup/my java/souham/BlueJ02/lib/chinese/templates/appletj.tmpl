$PKGLINE/**
 * 类 $CLASSNAME - 在这里给出这个类的描述
 * 
 * @作者: 
 * @日期: 
 */

import javax.swing.JApplet;
import javax.swing.JRootPane;
import java.awt.Graphics;

public class $CLASSNAME extends JApplet
{
	// 实例变量 - 用你自己的变量替换下面的例子
	private int x;

	 /**
	 * 由浏览器或者applet viewer调用，通知这个JApplet它已经被装入系统。
	 * 它总是在start方法第一次被调用之前被调用
	 */
	public void init()
	{
		// 这是一个工作区，用来在启动时进行和当前浏览器的安全冲突的检查，包括
		// Netscape & Internet Explorer，它们不允许访问JApplets要访问的AWT系统
		// 事件队列
		JRootPane rootPane = this.getRootPane();	
		rootPane.putClientProperty("defeatSystemEventQueueCheck", Boolean.TRUE);
	
		// 提供任何你的JApplet所必须的初始化步骤

	}

	/**
	 * 由浏览器或者applet viewer调用，通知这个JApplet它应该开始执行。
	 * 在init方法调用之后以及每次Web网页被重新访问的时候被调用
	 */
	public void start()
	{
		// 提供每次网页被访问时运行所需要的代码

	}

	/**
	 * 由浏览器或者applet viewer调用，通知这个JApplet它应该停止执行。
	 * 当包含这个JApplet的页面被另外一个页面替换的时候它会被调用，在
	 * JApplet被destroy的时候也会被调用。
	 */
	public void stop()
	{
		// 提供当页面被另一个页面替换或者JApplet被destroy之前需要执行的
		// 的任何方法
	
	}

	/**
	 * 由浏览器或者applet viewer调用，通知这个JApplet它正在被收回，它应该
	 * 释放所有它已经申请的资源。stop方法总会在destroy方法之前被调用。
	 */
	public void destroy()
	{
		// 提供JApplet将要被destroy之前需要执行的代码
	
	}


	/**
	 * 返回这个JApplet的信息。
	 * 一个JApplet应该重写这个方法来返回一个包含这个JApplet信息的字符串
	 * 关于这个JApplet的作者，版本，版权。
	 *
	 * @返回 一个表示这个JApplet信息的字符串
	 */
	public String getAppletInfo()
	{
		// 使用你自己的信息替换以下的代码
		return "Title:   \nAuthor:   \nA simple applet example description. ";
	}


	/**
	 * 返回这个JApplet的参数信息。
	 * 返回这个JApplet能够理解的参数的信息。一个JApplet应该重写这个方法
	 * 来返回一个String集合数组，描述它的参数。
	 * 每一个数组元素应该由三个String组合而成，包括名字，类型，和描述。
	 *
	 * @返回  一个String[][]，代表了这个JApplet的参数的信息。
	 */

	public String[][] getParameterInfo()
	{
		// 提供这个applet的参数信息
		String paramInfo[][] = {
				 {"firstParameter",	"1-10",	"第一个参数的描述"},
				 {"status", "boolean", "第二个参数的描述"},
				 {"images",   "url",	 "第三个参数的描述"}
		};
		return paramInfo;
	}

	/**
	 * applet的Paint方法
	 * 
	 * @参数  g   这个applet的Graphics对象
	 */
	public void paint(Graphics g)
	{
		// 在applet上显示简单文本
		g.drawString("Sample JApplet", 20, 20);
	}


	/**
	 * 一个方法的例子 - 使用你自己的说明替代它
	 * 
	 * @参数 y，方法的一个样本参数
	 * @返回 x，y的和 
	 */
	public int sampleMethod(int y)
	{
		// 在这里加入你的代码
		return x + y;
	}
}
