#
# Moe user function help texts.
#
# Part of the BlueJ program development environment.
#

## edit functions

delete-previous=\n 删除光标前面的字符。
delete-next=\n 删除光标后面的字符。
copy-to-clipboard=\n 把选中的文字拷贝到剪贴板，然后可以粘贴到其他地方\n(参见 paste-from-clipboard)。
cut-to-clipboard=\n 把选中的文字剪切到剪贴板，然后可以粘贴到其他地方\n(参见 paste-from-clipboard)。
copy-line=\n 将当前一行内容复制到剪贴板。
cut-line=\n 将当前一行内容剪切到剪贴板。
cut-end-of-line=\n 将当前行中光标位置到行尾的内容剪切到剪贴板。
cut-word=\n 将光标所在位置的单词剪切到剪贴板。
cut-end-of-word=\n 将光标到光标所在单词末尾的内容剪切到剪贴板。
paste-from-clipboard=\n 把剪贴板中当前内容粘贴到光标所在位置。
insert-tab=\n 插入一个制表符(TAB)。
insert-spaced-tab=\n 在下一个需要用到 TAB 的位置用空格代替TAB。(也就是说使用空格代替 TAB，而不是真正的 TAB ).
insert-break=\n 在光标所在位置插入一回车。
insert-break-and-indent=\n 在光标所在位置插入一回车，并按照上一行的格式缩进。
indent=\n 将当前行的缩进调整为与其上一行相同。
insert-method=\n 在文本中插入一个Java方法的框架。
comment=\n 将选中部分注释掉，稍后可以选择恢复(参见 uncomment)。
uncomment=\n 去掉当前选中的每一行行首注释标记(参见 comment)。

select-word=\n 选中当前单词(也可以双击鼠标左键)。
select-line=\n 选中当前一行(也可以三击鼠标左键)。
select-paragraph=\n 选中当前段落。
select-all=\n 选中整个文本。
selection-backward=\n 使选中部分的末尾后退一个字符。
selection-forward=\n 使选中部分的末尾前进一个字符。
selection-up=\n 使选中部分的末尾上移一行。
selection-down=\n 使选中部分的末尾下移一行。
selection-begin-word=\n 使选中部分的末尾移到所在单词的开始。
selection-end-word=\n 使选中部分的末尾移到所在单词的结束。
selection-previous-word=\n 使选中部分的末尾移到所在位置前一个单词的开始。
selection-next-word=\n 使选中部分的末尾移到所在位置下一个单词的开始。
selection-begin-line=\n 使选中部分的末尾移到当前行首。
selection-end-line=\n 使选中部分的末尾移到当前行尾。
selection-begin-paragraph=\n 使选中部分的末尾移到当前段首。
selection-end-paragraph=\n 使选中部分的末尾移到当前段尾。
selection-page-up=\n 使选中部分的末尾向上移动一页。
selection-page-down=\n 使选中部分的末尾向下移动一页。
selection-begin=\n 使选中部分的末尾移到文本开始。
selection-end=\n 使选中部分的末尾移到文本末尾。
unselect=\n 取消选择(并非删除选中文本！)。

## move and scroll functions

caret-backward=\n 光标向后移动一个字符。
caret-forward=\n 光标向前移动一个字符。
caret-up=\n 光标向上移动一行。
caret-down=\n 光标向下移动一行。
caret-begin-word=\n 光标移动到当前所在单词的开始。
caret-end-word=\n 光标移动到当前所在单词的结束。
caret-previous-word=\n 光标移动到当前所在前一个单词的开始。
caret-next-word=\n 光标移动到当前所在下一个单词的开始。
caret-begin-line=\n 光标移动到当前所在行行首。
caret-end-line=\n 光标移动到当前所在行行尾。
caret-begin-paragraph=\n 光标移动到当前所在段落的开始。
caret-end-paragraph=\n 光标移动到当前所在段落的末尾。
page-up=\n 光标向上移动一页。
page-down=\n 光标向移动一页。
caret-begin=\n 光标移动到文本的开始。
caret-end=\n 光标移动到文本的末尾。

## class functions

save=\n 保存当前类。注意：几乎不需要直接存盘，退出的时候会自动保\n存。
reload=\n 从源文件重新载入类。此操作将放弃最后一次存盘之后所作的所\n有修改(隐士的或显式的)。
close=\n 关闭当前类。源文件将自动保存。
print=\n 打开一个打印对话框以设置打印属性。
page-setup=\n 打开一个页面设置对话框以指定页面版式。


## customisation functions

preferences=\n 指定编辑器的部分个性化设置。
key-bindings=\n 查看并更改Moe用户功能的热键设置。


## help functions

describe-key=\n 调用此功能，然后按下一个键，将显示该热键对应的功能。
help-mouse=\n 显示鼠标按键设置。
show-manual=\n 打开web浏览器并显示Moe用户手册。
about-editor=\n 显示关于Moe的相关信息。


## misc functions

undo=\n 撤销最后一步编辑操作(可通过 'redo' 恢复)。
redo=\n 恢复被撤销的最后一步编辑操作。

find=\n 打开一个从文本中搜索字符串的对话框，允许向前或向后搜索。
find-backward=\n 类似 find，但默认为向后搜索。
find-next= 如果已选中一段文字，则搜索该字段的下一次出现位置；如果没\n有选中任何字段，则再次查找上一次搜索中使用的字段。最后在\n文本末尾停止搜索，如果到达文本末尾而再次调用此功能，将返\n回文本开始并继续从头搜索。
find-next-reverse=\n 类似 find-next，但搜索方向相反。
replace=\n 用一个字符串替换文本中的另一个字符串。

compile=\n 编译当前类。当前类在编译之前将自动保存。
toggle-interface-view= 使用 javadoc 产生并查看当前类的文档信息。注意：此功能只产\n生预览文档，如果您需要产生并保存为永久性文档，请使用主菜\n单中的“生成项目文档”选项。
toggle-breakpoint=\n 在当前行设置或清除断点。

## help texts for adding key bindings

press-key=\n  请选择您需要添加的热键……
cannot-redefine=\n  不能定义热键为可打印字符。
